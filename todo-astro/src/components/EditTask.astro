---
const { id, title, description, completed } = Astro.props;
---

<div
  x-data="{ 
    editModalIsOpen: false,
    openModal() { 
        this.editModalIsOpen = true;
    }, 
    closeModal() { 
        this.editModalIsOpen = false; 
    } 
}"
  class="w-full"
>
  <button @click="openModal()">
    <!-- Abre el modal -->
    <img class="h-6" src="/icons/edit.svg" alt="Edit" />
  </button>

  <!-- Modal para editar tarea -->
  <div
    x-cloak
    x-show="editModalIsOpen"
    x-transition.opacity.duration.200ms
    x-trap.inert.noscroll="editModalIsOpen"
    @keydown.esc.window="closeModal()"
    @click.self="closeModal()"
    class="fixed inset-0 z-30 flex items-end justify-center bg-black/20 p-4 pb-8 backdrop-blur-md sm:items-center lg:p-8"
    role="dialog"
    aria-modal="true"
    aria-labelledby="editModalTitle"
  >
    <!-- Modal Dialog -->
    <div
      x-show="editModalIsOpen"
      x-transition:enter="transition ease-out duration-200 delay-100 motion-reduce:transition-opacity"
      x-transition:enter-start="opacity-0 scale-50"
      x-transition:enter-end="opacity-100 scale-100"
      class="flex w-[32rem] max-w-lg flex-col gap-4 overflow-hidden rounded-md border border-neutral-300 bg-white text-neutral-600
            dark:border-neutral-700 dark:bg-neutral-900 dark:text-neutral-300"
    >
      <!-- Dialog Header -->
      <div
        class="flex items-center justify-between border-b border-neutral-300 bg-neutral-50/60 p-4
                dark:border-neutral-700 dark:bg-neutral-950/20"
      >
        <h3
          id="editModalTitle"
          class="font-semibold tracking-wide text-neutral-900 dark:text-white"
        >
          Editar Tarea
          <span
            id="taskId"
            class="text-sm text-neutral-500 dark:text-neutral-400">{id}</span
          >
          <!-- Muestra el ID de la tarea -->
        </h3>
        <button @click="closeModal()" aria-label="close modal">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            aria-hidden="true"
            stroke="currentColor"
            fill="none"
            stroke-width="1.4"
            class="w-5 h-5"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <!-- Dialog Body -->
      <div class="px-4 py-8">
        <!-- Formulario de edición -->
        <form id="editTaskForm" onsubmit="handleSubmit(event)">
          <input type="hidden" name="id" value={id} />
          <!-- Campo oculto para el ID -->
          <div class="mb-4">
            <label
              for="editTitle"
              class="block text-sm font-medium text-neutral-700 dark:text-neutral-300"
              >Título</label
            >
            <input
              type="text"
              name="title"
              id="editTitle"
              value={title}
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-300"
            />
          </div>
          <div class="mb-4">
            <label
              for="editDescription"
              class="block text-sm font-medium text-neutral-700 dark:text-neutral-300"
              >Descripción</label
            >
            <textarea
              name="description"
              id="editDescription"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-300"
              >{description}</textarea
            >
          </div>
          <div class="mb-4">
            <label
              for="editCompleted"
              class="block text-sm font-medium text-neutral-700 dark:text-neutral-300"
              >Estado</label
            >
            <select
              name="completed"
              id="editCompleted"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 dark:border-neutral-700 dark:bg-neutral-800 dark:text-neutral-300"
            >
              <option value="true" selected={completed}>Completado</option>
              <option value="false" selected={!completed}>Pendiente</option>
            </select>
          </div>
          <!-- Botones de acción -->
          <div class="flex justify-end space-x-2">
            <button
              @click="closeModal()"
              type="button"
              class="cursor-pointer whitespace-nowrap rounded-md px-4 py-2 text-center text-sm font-medium
                        tracking-wide text-neutral-600 transition hover:opacity-75 focus-visible:outline
                        focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100
                        active:outline-offset-0 dark:text-neutral-300 dark:focus-visible:outline-white"
              >Cancelar</button
            >
            <button
              type="submit"
              class="cursor-pointer whitespace-nowrap rounded-md bg-black px-4 py-2 text-center text-sm font-medium
                        tracking-wide text-neutral-100 transition hover:opacity-75 focus-visible:outline
                        focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100
                        active:outline-offset-0 dark:bg-white dark:text-black dark:focus-visible:outline-white"
              >Guardar</button
            >
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script is:inline>
  async function handleSubmit(event) {
    event.preventDefault();

    const formData = new FormData(event.target);

    const id = formData.get("id");
    const title = formData.get("title");
    const description = formData.get("description");
    const completed = formData.get("completed") === "true";

    console.log("Data to be sent:", { id, title, description, completed });

    try {
      const response = await fetch(`http://localhost:3000/api/v1/tasks/${id}`, {
        method: "PATCH",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ title, description, completed }),
      });

      if (!response.ok) {
        throw new Error("Failed to update task");
      }

      console.log("Task updated successfully");
      location.reload();
    } catch (error) {
      console.error("Error al editar la tarea:", error);
      alert("Error al editar la tarea");
    }
  }
</script>
